# -*- coding: utf-8 -*-
# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.7.0
#
# <auto-generated>
#
# Generated from file `metaServer.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module metaServer
_M_metaServer = Ice.openModule('metaServer')
__name__ = 'metaServer'

if '_t_playList' not in _M_metaServer.__dict__:
    _M_metaServer._t_playList = IcePy.defineSequence('::metaServer::playList', (), IcePy._t_string)

_M_metaServer._t_msFunction = IcePy.defineValue('::metaServer::msFunction', Ice.Value, -1, (), False, True, None, ())

if 'msFunctionPrx' not in _M_metaServer.__dict__:
    _M_metaServer.msFunctionPrx = Ice.createTempClass()
    class msFunctionPrx(Ice.ObjectPrx):

        def parse(self, data, action, context=None):
            return _M_metaServer.msFunction._op_parse.invoke(self, ((data, action), context))

        def parseAsync(self, data, action, context=None):
            return _M_metaServer.msFunction._op_parse.invokeAsync(self, ((data, action), context))

        def begin_parse(self, data, action, _response=None, _ex=None, _sent=None, context=None):
            return _M_metaServer.msFunction._op_parse.begin(self, ((data, action), _response, _ex, _sent, context))

        def end_parse(self, _r):
            return _M_metaServer.msFunction._op_parse.end(self, _r)

        def receive(self, context=None):
            return _M_metaServer.msFunction._op_receive.invoke(self, ((), context))

        def receiveAsync(self, context=None):
            return _M_metaServer.msFunction._op_receive.invokeAsync(self, ((), context))

        def begin_receive(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_metaServer.msFunction._op_receive.begin(self, ((), _response, _ex, _sent, context))

        def end_receive(self, _r):
            return _M_metaServer.msFunction._op_receive.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_metaServer.msFunctionPrx.ice_checkedCast(proxy, '::metaServer::msFunction', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_metaServer.msFunctionPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::metaServer::msFunction'
    _M_metaServer._t_msFunctionPrx = IcePy.defineProxy('::metaServer::msFunction', msFunctionPrx)

    _M_metaServer.msFunctionPrx = msFunctionPrx
    del msFunctionPrx

    _M_metaServer.msFunction = Ice.createTempClass()
    class msFunction(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::metaServer::msFunction')

        def ice_id(self, current=None):
            return '::metaServer::msFunction'

        @staticmethod
        def ice_staticId():
            return '::metaServer::msFunction'

        def parse(self, data, action, current=None):
            raise NotImplementedError("servant method 'parse' not implemented")

        def receive(self, current=None):
            raise NotImplementedError("servant method 'receive' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_metaServer._t_msFunctionDisp)

        __repr__ = __str__

    _M_metaServer._t_msFunctionDisp = IcePy.defineClass('::metaServer::msFunction', msFunction, (), None, ())
    msFunction._ice_type = _M_metaServer._t_msFunctionDisp

    msFunction._op_parse = IcePy.Operation('parse', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), None, ())
    msFunction._op_receive = IcePy.Operation('receive', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), _M_metaServer._t_playList, False, 0), ())

    _M_metaServer.msFunction = msFunction
    del msFunction

# End of module metaServer
